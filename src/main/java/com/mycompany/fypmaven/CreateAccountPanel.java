package com.mycompany.fypmaven;

import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.security.SecureRandom;
import java.sql.SQLException;
import javax.swing.Timer;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class CreateAccountPanel extends javax.swing.JFrame {

    UserAccs user;
    private static final Logger logger = LogManager.getLogger();

    public CreateAccountPanel() {

    }

//    Overload of the constructor
    public CreateAccountPanel(UserAccs user) {

//      Initial setup of the frame
        initComponents();
        this.user = user;

        /*      Listeners   */
//      Content Pane Mouse Listener
/*      Removes all focus */
        getContentPane().addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                KeyboardFocusManager.getCurrentKeyboardFocusManager().clearGlobalFocusOwner();
            }
        });

//      Check box Action Listener
/*      Shows the content of the password textbox*/
        checkBoxShowPassword.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                if (checkBoxShowPassword.isSelected()) {
                    TxtPassword.setEchoChar((char) 0); // Show password as plain text
                } else {
                    TxtPassword.setEchoChar('*'); // Show password as asterisks
                }
            }
        });

//      Generate Password Action Listener
/*      Changes the text of the generate password button then changes it back after a few seconds*/
        BtnGeneratePass.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                BtnGeneratePass.setText("Generated");
                Timer timer = new Timer(5000, new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        BtnGeneratePass.setText("Generate Password");
                    }
                });
                timer.setRepeats(false);
                timer.start();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TxtDescription = new javax.swing.JTextField();
        LblDescription = new javax.swing.JLabel();
        LblUserName = new javax.swing.JLabel();
        TxtUsername = new javax.swing.JTextField();
        LblPassword = new javax.swing.JLabel();
        BtnGeneratePass = new javax.swing.JButton();
        LblURL = new javax.swing.JLabel();
        TxtURL = new javax.swing.JTextField();
        BtnSave = new javax.swing.JButton();
        BtnCancel = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        TxtPassword = new javax.swing.JPasswordField();
        checkBoxShowPassword = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TxtDescription.setMinimumSize(new java.awt.Dimension(37, 225));

        LblDescription.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        LblDescription.setForeground(new java.awt.Color(0, 0, 0));
        LblDescription.setText("Description:");

        LblUserName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        LblUserName.setForeground(new java.awt.Color(0, 0, 0));
        LblUserName.setText("Username :");

        TxtUsername.setMinimumSize(new java.awt.Dimension(37, 225));

        LblPassword.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        LblPassword.setForeground(new java.awt.Color(0, 0, 0));
        LblPassword.setText("Password :");

        BtnGeneratePass.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        BtnGeneratePass.setText("Generate Password");
        BtnGeneratePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGeneratePassActionPerformed(evt);
            }
        });

        LblURL.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        LblURL.setForeground(new java.awt.Color(0, 0, 0));
        LblURL.setText("URL :");

        BtnSave.setLabel("Save");
        BtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveActionPerformed(evt);
            }
        });

        BtnCancel.setText("Cancel");
        BtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelActionPerformed(evt);
            }
        });

        TxtPassword.setEnabled(false);

        checkBoxShowPassword.setText("Show Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(LblDescription)
                .addGap(15, 15, 15)
                .addComponent(TxtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(LblUserName)
                .addGap(18, 18, 18)
                .addComponent(TxtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(348, 348, 348)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(BtnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(BtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(LblURL)
                            .addGap(25, 25, 25)
                            .addComponent(TxtURL, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(checkBoxShowPassword)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LblPassword)
                        .addGap(19, 19, 19)
                        .addComponent(TxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(BtnGeneratePass, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(LblDescription))
                    .addComponent(TxtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(LblUserName))
                    .addComponent(TxtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LblPassword)
                    .addComponent(TxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxShowPassword)
                .addGap(6, 6, 6)
                .addComponent(BtnGeneratePass, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(LblURL))
                    .addComponent(TxtURL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//  This is the cancel process code block
    private void BtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelActionPerformed

        Dashboard dashboard = new Dashboard(user);
        dashboard.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_BtnCancelActionPerformed

//    This is the save process code block
    private void BtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveActionPerformed

//      Declarartion of variables
        String Username = TxtUsername.getText();
        String Password = TxtPassword.getText().trim();
        String Description = TxtDescription.getText();
        String URL = TxtURL.getText();
        String UserID = user.getUserID();
        Object[] Data = {Description, UserID};
        String duplicateQuery = "SELECT Description FROM accounts WHERE Description = ? AND user_id = ?";

//      Checks if there are any empty textboxes
        if (Username.equals("") || Password.equals("") || Description.equals("") || URL.equals("")) {

            GeneralFunctions.showNotification("Please ensure that all the textboxes are filled in.", "Failed");

//      Checks if there the description entered already exists within  the system   
        } else if (GeneralFunctions.checkDuplicate(Data, duplicateQuery) == true) {

            GeneralFunctions.showNotification("There is already an account with the same description.", "Failed");
        } else {

            logger.info("Adding account");
            
            //  Encrypts the password 
            Password = GeneralFunctions.encrypt(TxtPassword.getText(), user.getEncryptKey());

//          Variable Declaration
            Object[] Accdata = {Description, Username, Password, URL, UserID};
            String insertQuery = "INSERT INTO accounts (Description, Username, Password, URL, user_id) VALUES (?, ?, ?, ?, ?)";

            try {

//          Inserts the data into the system
                DB_Connection connection = new DB_Connection();
                connection.getConnection();
                connection.executeQuery(insertQuery, Accdata);
                GeneralFunctions.showNotification("Account saved", "Success");

//              Directs the user back to the dashboard
                Dashboard dashboard = new Dashboard(user);
                dashboard.setVisible(true);
                this.dispose();

                logger.info("Successfully added account");
            } catch (SQLException ex) {
                logger.error(ex.getMessage());
            }
        }

    }//GEN-LAST:event_BtnSaveActionPerformed

//    This is the generate password code block
    private void BtnGeneratePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGeneratePassActionPerformed

//      Declaration of variables
        String LOWERCASE = "abcdefghijklmnopqrstuvwxyz";
        String UPPERCASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String DIGITS = "0123456789";
        String SPECIAL_CHARACTERS = "!@#$%^&*()_-+=<>?";
        int passwordLength = 20;
        boolean includeUppercase = true;
        boolean includeDigits = true;
        boolean includeSpecialChars = true;
        SecureRandom random = new SecureRandom();
        StringBuilder password = new StringBuilder();

        // Defining the characterset of the generated password
        String characters = LOWERCASE;
        if (includeUppercase) {
            characters += UPPERCASE;
        }
        if (includeDigits) {
            characters += DIGITS;
        }
        if (includeSpecialChars) {
            characters += SPECIAL_CHARACTERS;
        }

        // Generating the password
        for (int i = 0; i < passwordLength; i++) {
            int index = random.nextInt(characters.length());
            password.append(characters.charAt(index));
        }

//      Changing the text of the pasword textbox
        String securePassword = password.toString();
        TxtPassword.setText(securePassword);

    }//GEN-LAST:event_BtnGeneratePassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAccountPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAccountPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAccountPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAccountPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateAccountPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancel;
    private javax.swing.JButton BtnGeneratePass;
    private javax.swing.JButton BtnSave;
    private javax.swing.JLabel LblDescription;
    private javax.swing.JLabel LblPassword;
    private javax.swing.JLabel LblURL;
    private javax.swing.JLabel LblUserName;
    private javax.swing.JTextField TxtDescription;
    private javax.swing.JPasswordField TxtPassword;
    private javax.swing.JTextField TxtURL;
    private javax.swing.JTextField TxtUsername;
    private javax.swing.JCheckBox checkBoxShowPassword;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    // End of variables declaration//GEN-END:variables
}
